-- CREATE FUNCTION HAS_CFTYPE {{{
-- see couples.cftypes
-- CREATE FUNCTION HAS_CFTYPE(BIT(32), BIT(32)) {{{
CREATE OR REPLACE FUNCTION callrec.HAS_CFTYPE(BIT(32), BIT(32))
  RETURNS BOOLEAN
  IMMUTABLE
  RETURNS NULL ON NULL INPUT
  LANGUAGE plpgsql
  AS '
    DECLARE
      _present INTEGER;
    BEGIN
      _present := CAST($1 & $2 AS INTEGER);
      IF 0 = _present THEN
        RETURN FALSE;
      ELSE
        RETURN TRUE;
      END IF;
    END;
  ';

GRANT EXECUTE ON FUNCTION callrec.HAS_CFTYPE(BIT(32), BIT(32)) TO GROUP callrecgrp;
-- }}}
-- CREATE FUNCTION HAS_CFTYPE(BIT(32), INTEGER) {{{
CREATE OR REPLACE FUNCTION callrec.HAS_CFTYPE(BIT(32), INTEGER)
  RETURNS BOOLEAN
  IMMUTABLE
  RETURNS NULL ON NULL INPUT
  LANGUAGE plpgsql
  AS '
    BEGIN
      RETURN callrec.HAS_CFTYPE($1, CAST($2 AS BIT(32)));
    END;
  ';

GRANT EXECUTE ON FUNCTION callrec.HAS_CFTYPE(BIT(32), INTEGER) TO GROUP callrecgrp;
-- }}}
-- CREATE FUNCTION HAS_CFTYPE(BIT(32), VARCHAR) {{{
CREATE OR REPLACE FUNCTION callrec.HAS_CFTYPE(BIT(32), VARCHAR)
  RETURNS BOOLEAN
  IMMUTABLE
  RETURNS NULL ON NULL INPUT
  LANGUAGE plpgsql
  AS '
    BEGIN
      RETURN callrec.HAS_CFTYPE($1, callrec.GET_CFTYPEMASK($2));
    END;
  ';

GRANT EXECUTE ON FUNCTION callrec.HAS_CFTYPE(BIT(32), VARCHAR) TO GROUP callrecgrp;
-- }}}
-- }}}

